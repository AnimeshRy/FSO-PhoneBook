{"version":3,"sources":["components/Person.js","components/List.js","components/PersonForm.js","components/Filter.js","services/Numbers.js","components/Notification.js","components/Information.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","id","List","list","map","item","PersonForm","props","formSubmit","newName","nameValueChange","newNumber","numberValueChange","onSubmit","value","onChange","type","Filter","inputValue","handleInputChange","baseUrl","getAll","a","axios","get","request","data","create","newObject","post","deleteRecord","delete","personService","update","put","Notification","message","className","Information","App","useState","persons","setPersons","setNewName","setNewNumber","searchPerson","setSearchPerson","errorMessage","seterrorMessage","informationMessage","setinformationMessage","useEffect","response","setTimeout","fetchData","updateNumber","find","updatedPerson","returnedRecord","filter","pp","addPerson","event","preventDefault","newObj","some","window","confirm","concat","deletePerson","tobeDeleted","n","e","target","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfbdf762.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({ person, onDelete }) => {\n  return (\n    <li>\n      {person.name} - {person.number}{' '}\n      <button onClick={() => onDelete(person.id)}>delete</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst List = ({ list, onDelete }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <ul>\n        {list.map((item) => (\n          <Person key={item.id} person={item} onDelete={onDelete}></Person>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\n\nconst PersonForm = (props) => {\n  let {\n    formSubmit,\n    newName,\n    nameValueChange,\n    newNumber,\n    numberValueChange,\n  } = props;\n  return (\n    <>\n      <h2>Add a New</h2>\n      <form onSubmit={formSubmit}>\n        <div>\n          name: <input value={newName} onChange={nameValueChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={numberValueChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nfunction Filter({ inputValue, handleInputChange }) {\n  return (\n    <div>\n      Filter Numbers -{' '}\n      <input value={inputValue} onChange={handleInputChange}></input>\n    </div>\n  );\n}\n\nexport default Filter;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl);\n  return request.data;\n};\n\nconst create = async (newObject) => {\n  const request = await axios.post(baseUrl, newObject);\n  return request.data;\n};\n\nconst deleteRecord = async (id) => {\n  await axios.delete(baseUrl + '/' + id);\n};\n\nconst update = async (id, newObject) => {\n  const request = await axios.put(`${baseUrl}/${id}`, newObject);\n  return request.data;\n};\n\nconst personService = {\n  getAll,\n  create,\n  update,\n  deleteRecord,\n};\n// export default { getAll, create }\n\nexport default personService;\n","import React from 'react';\n\nfunction Notification({ message }) {\n  if (message === null) return null;\n  return <div className={'error'}>{message}</div>;\n}\n\nexport default Notification;\n","import React from 'react';\n\nfunction Information({ message }) {\n  if (message === null) return null;\n  return <div className={'information'}>{message}</div>;\n}\n\nexport default Information;\n","import React, { useState, useEffect } from 'react';\nimport List from './components/List';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport personService from './services/Numbers';\nimport Notification from './components/Notification';\nimport Information from './components/Information';\nimport './App.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchPerson, setSearchPerson] = useState('');\n  const [errorMessage, seterrorMessage] = useState(null);\n  const [informationMessage, setinformationMessage] = useState(null);\n\n  // only run on first render\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await personService.getAll();\n        setPersons(response);\n      } catch (error) {\n        seterrorMessage('Error in retrieving data from the server');\n        setTimeout(() => {\n          seterrorMessage(null);\n        }, 5000);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const updateNumber = async (name, newNumber) => {\n    const person = persons.find((person) => person.name === name);\n    const updatedPerson = { ...person, number: newNumber };\n    try {\n      const returnedRecord = await personService.update(\n        updatedPerson.id,\n        updatedPerson\n      );\n      setPersons(\n        persons.map((person) =>\n          person.id !== updatedPerson.id ? person : returnedRecord\n        )\n      );\n    } catch (error) {\n      seterrorMessage(\n        `Information of ${name} has already been removed from the server`\n      );\n      setPersons(persons.filter((pp) => pp !== person));\n      setTimeout(() => {\n        seterrorMessage(null);\n      }, 3000);\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const addPerson = async (event) => {\n    event.preventDefault();\n    const newObj = {\n      name: newName,\n      number: newNumber,\n    };\n    if (persons.some((person) => person.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} already in the phonebook, do you want to replace the old number with the new one ?`\n        )\n      ) {\n        updateNumber(newName, newNumber);\n        return;\n      }\n      return;\n    }\n    try {\n      const returnedRecord = await personService.create(newObj);\n      setPersons(persons.concat(returnedRecord));\n      setinformationMessage(`Added ${newName} to the phonebook!`);\n      setTimeout(() => {\n        setinformationMessage(null);\n      }, 3000);\n    } catch (error) {\n      seterrorMessage('Could not create new record');\n      setTimeout(() => {\n        seterrorMessage(null);\n      }, 5000);\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n  const deletePerson = async (id) => {\n    const tobeDeleted = persons.find((n) => n.id === id);\n    if (window.confirm(`Do you really want to delete ${tobeDeleted.name} ?`)) {\n      try {\n        await personService.deleteRecord(id);\n      } catch (error) {\n        seterrorMessage(\n          'Looks like the record is already removed from the server'\n        );\n        setTimeout(() => {\n          seterrorMessage(null);\n        }, 5000);\n      }\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    setSearchPerson(e.target.value);\n  };\n\n  const filterListValue = () => {\n    if (searchPerson === '') {\n      return persons;\n    }\n    return [...persons].filter((person) =>\n      person.name.toLowerCase().includes(searchPerson.toLowerCase())\n    );\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Information message={informationMessage}></Information>\n      <Notification message={errorMessage}></Notification>\n      <Filter\n        inputValue={searchPerson}\n        handleInputChange={handleFilterChange}\n      ></Filter>\n\n      <PersonForm\n        formSubmit={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        nameValueChange={handleNameChange}\n        numberValueChange={handleNumberChange}\n      ></PersonForm>\n\n      <List list={filterListValue()} onDelete={deletePerson}></List>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}